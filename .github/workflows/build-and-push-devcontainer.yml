name: 'build-and-push-devcontainer' 
on: # rebuild when devcontainer is updated
  push:
    paths:
      - '.devcontainer/**'
    branches:
      - main
  workflow_dispatch:  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout (GitHub)
        uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: 3
      
      - name: Get Version For Tag
        id: get_version
        run: |
          pip install -e .
          version=$(ghidrecomp -v)
          echo "ghidrecomp_ver=$version" >> $GITHUB_OUTPUT
          echo $ghidrecomp_ver
      - name: Install updated Skopeo
        # This can be omitted once runner images have a version of Skopeo > 1.4.1
        # See https://github.com/containers/skopeo/issues/1874
        run: |
          sudo apt purge buildah golang-github-containers-common podman skopeo
          sudo apt autoremove --purge
          REPO_URL="https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/unstable"
          source /etc/os-release
          sudo sh -c "echo 'deb ${REPO_URL}/x${NAME}_${VERSION_ID}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list"
          sudo wget -qnv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/x${NAME}_${VERSION_ID}/Release.key -O Release.key
          sudo apt-key add Release.key
          sudo apt-get update
          sudo apt-get install skopeo          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # enables building of multi-platform images
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Create Docker Build Instance
        run: |
          docker buildx create --use
          echo Contexts
          docker context ls
          docker buildx ls

      - name: Pre-build dev container image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/clearbluejar/ghidrecomp
          # cacheFrom: ghcr.io/clearbluejar/ghidrecomp
          imageTag: latest,${{ steps.get_version.outputs.ghidrecomp_ver}}
          platform: linux/arm64,linux/amd64
          push: never